<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

    <groupId>hu.blackbelt.judo.eclipse.jdk.zulu</groupId>
	<artifactId>parent</artifactId>
    <version>${revision}</version>
	<packaging>pom</packaging>

	<name>Bundled Zulu Java JDK</name>

    <url>http://github.com/${project-repositoryId}</url>

    <description>Zulu JDK for Eclipse</description>

    <issueManagement>
        <url>https://github.com/${project-repositoryId}/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <licenses>
        <license>
            <name>GNU General Public License, version 2, with the Classpath Exception</name>
            <url>https://openjdk.java.net/legal/gplv2+ce.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <scm>
        <connection>scm:git:git@github.com:${project-repositoryId}.git</connection>
        <!--suppress UnresolvedMavenProperty -->
		<developerConnection>scm:git:ssh://${git.username}@github.com:${project-repositoryId}.git
        </developerConnection>
        <url>http://github.com/${project-repositoryId}</url>
    </scm>

    <developers>
        <developer>
            <id>robson</id>
            <name>Róbert Csákány</name>
            <email>robert.csakany@blackbelt.hu</email>
            <url>https://github.com/robertcsakany</url>
            <organization>BlackBelt Technology</organization>
            <organizationUrl>http://www.blackbelt.hu</organizationUrl>
        </developer>
    </developers>
    
    <properties>
        <revision>11.0.16-SNAPSHOT</revision>
        <maven>3.8.3</maven>
        <project-shortname>judo-eclipse-zulu-jdk</project-shortname>
        <project-repositoryId>BlackBeltTechnology/judo-eclipse-zulu-jdk</project-repositoryId>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>

        <tycho-version>2.7.5</tycho-version>
		<jarsigner.plugin.version>3.0.0</jarsigner.plugin.version>
		<jarsigner.skip>true</jarsigner.skip>


        <download.url>https://cdn.azul.com/zulu/bin/</download.url>
		<!-- to test locally, place files in a local directory
		<download.url>file:///Users/.../zulu/</download.url>
		-->
		<download.file>zulu11.58.23-ca-jdk11.0.16.1-</download.file>
		<download.filePostfix>os_arch.zip</download.filePostfix>
		<download.unzippedFolder>${download.file}</download.unzippedFolder>
		<download.unzippedFolderPostfix>os_arch</download.unzippedFolderPostfix>
		<download.type>zip</download.type>
		<jdk.folder>jdk</jdk.folder>

	</properties>


	<repositories>
		<repository>
			<id>eclipse</id>
			<layout>p2</layout>
			<url>https://download.eclipse.org/eclipse/updates/4.22/R-4.22-202111241800/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-versions-plugin</artifactId>
            </plugin>
            
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<configuration>
					<resolver>p2</resolver>
					<pomDependencies>consider</pomDependencies>
					<environments>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>aarch64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>aarch64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.3.0</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
					<executions>
						<execution>
							<id>Download Zulu: ${download.file}${download.filePostfix}</id>
							<phase>process-sources</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>curl</executable>
								<arguments>
									<argument>-L</argument>
									<argument>-#</argument>
									<argument>--create-dirs</argument>
									<argument>--output</argument>
									<argument>${project.build.directory}/${download.file}${download.filePostfix}</argument>
									<argument>${download.url}${download.file}${download.filePostfix}</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Unzip: ${download.file}${download.filePostfix}"/>
									<ac:if xmlns:ac="antlib:net.sf.antcontrib">
										<equals arg1="${download.type}" arg2="gzip"/> 
										<then>
											<untar compression="gzip" dest="${project.build.directory}/downloads/" src="${project.build.directory}/${download.file}${download.filePostfix}"/>
										</then>
										<else>
											<unzip dest="${project.build.directory}/downloads/" src="${project.build.directory}/${download.file}${download.filePostfix}"/>
										</else>
									</ac:if>
									<move file="${project.build.directory}/downloads/${download.unzippedFolder}${download.unzippedFolderPostfix}" tofile="${project.build.directory}/downloads/${jdk.folder}"/>
								</target>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>1.0b3</version>
							<exclusions>
								<exclusion>
									<groupId>ant</groupId>
									<artifactId>ant</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.0</version>
					<executions>
						<execution>
							<id>process-p2.inf</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/templates</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>${project.basedir}/src/main/template</directory>
										<includes>
											<include>**/*</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-packaging-plugin</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<additionalFileSets>
							<!-- include jdk -->
							<fileSet>
								<directory>${project.build.directory}/downloads/</directory>
								<includes>
									<include>${jdk.folder}/**/*</include>
								</includes>
								<excludes>

									<exclude>${jdk.folder}/man/**/*</exclude>
									<exclude>${jdk.folder}/sample/**/*</exclude>
									<exclude>${jdk.folder}/demo/**/*</exclude>
									<exclude>${jdk.folder}/include/**/*</exclude>
									<exclude>${jdk.folder}/src.zip</exclude>
									<exclude>${jdk.folder}/jmods/**/*</exclude>

									<!-- bin -->
									<exclude>${jdk.folder}/bin/rmid</exclude>
									<exclude>${jdk.folder}/bin/rmiregistry</exclude>
									<exclude>${jdk.folder}/bin/tnameserv</exclude>
									<exclude>${jdk.folder}/bin/keytool</exclude>
									<exclude>${jdk.folder}/bin/policytool</exclude>
									<exclude>${jdk.folder}/bin/orbd</exclude>
									<exclude>${jdk.folder}/bin/servertool</exclude>
									<exclude>${jdk.folder}/bin/javaws</exclude>
									<exclude>${jdk.folder}/bin/pack200</exclude>
									<exclude>${jdk.folder}/bin/unpack200</exclude>
									<exclude>${jdk.folder}/bin/jrunscript</exclude>
									<exclude>${jdk.folder}/bin/jaotc</exclude>
									<exclude>${jdk.folder}/bin/jfr</exclude>
									<exclude>${jdk.folder}/bin/jjs</exclude>

									<exclude>${jdk.folder}/bin/appletviewer</exclude>
									<exclude>${jdk.folder}/bin/clhsdb</exclude>
									<exclude>${jdk.folder}/bin/extcheck</exclude>
									<exclude>${jdk.folder}/bin/hsdb</exclude>
									<exclude>${jdk.folder}/bin/idlj</exclude>
									<exclude>${jdk.folder}/bin/jar</exclude>
									<exclude>${jdk.folder}/bin/jarsigner</exclude>
									<exclude>${jdk.folder}/bin/javac</exclude>
									<exclude>${jdk.folder}/bin/javadoc</exclude>
									<exclude>${jdk.folder}/bin/javah</exclude>
									<exclude>${jdk.folder}/bin/javap</exclude>
									<exclude>${jdk.folder}/bin/jcmd</exclude>
									<exclude>${jdk.folder}/bin/jconsole</exclude>
									<exclude>${jdk.folder}/bin/jdb</exclude>
									<exclude>${jdk.folder}/bin/jdeps</exclude>
									<exclude>${jdk.folder}/bin/jfr</exclude>
									<exclude>${jdk.folder}/bin/jhat</exclude>
									<exclude>${jdk.folder}/bin/jinfo</exclude>
									<exclude>${jdk.folder}/bin/jjs</exclude>
									<exclude>${jdk.folder}/bin/jmap</exclude>
									<exclude>${jdk.folder}/bin/jps</exclude>
									<exclude>${jdk.folder}/bin/jrunscript</exclude>
									<exclude>${jdk.folder}/bin/jsadebugd</exclude>
									<exclude>${jdk.folder}/bin/jstack</exclude>
									<exclude>${jdk.folder}/bin/jstat</exclude>
									<exclude>${jdk.folder}/bin/jstatd</exclude>
									<exclude>${jdk.folder}/bin/keytool</exclude>
									<exclude>${jdk.folder}/bin/native2ascii</exclude>
									<exclude>${jdk.folder}/bin/orbd</exclude>
									<exclude>${jdk.folder}/bin/pack200</exclude>
									<exclude>${jdk.folder}/bin/policytool</exclude>
									<exclude>${jdk.folder}/bin/rmic</exclude>
									<exclude>${jdk.folder}/bin/rmid</exclude>
									<exclude>${jdk.folder}/bin/rmiregistry</exclude>
									<exclude>${jdk.folder}/bin/schemagen</exclude>
									<exclude>${jdk.folder}/bin/serialver</exclude>
									<exclude>${jdk.folder}/bin/servertool</exclude>
									<exclude>${jdk.folder}/bin/tnameserv</exclude>
									<exclude>${jdk.folder}/bin/unpack200</exclude>
									<exclude>${jdk.folder}/bin/wsgen</exclude>
									<exclude>${jdk.folder}/bin/wsimport</exclude>
									<exclude>${jdk.folder}/bin/xjc</exclude>

									<!-- bin [Microsoft Windows] -->
									<exclude>${jdk.folder}/bin/rmid.exe</exclude>
									<exclude>${jdk.folder}/bin/rmiregistry.exe</exclude>
									<exclude>${jdk.folder}/bin/tnameserv.exe</exclude>
									<exclude>${jdk.folder}/bin/keytool.exe</exclude>
									<exclude>${jdk.folder}/bin/policytool.exe</exclude>
									<exclude>${jdk.folder}/bin/orbd.exe</exclude>
									<exclude>${jdk.folder}/bin/servertool.exe</exclude>
									<exclude>${jdk.folder}/bin/javaws.exe</exclude>
									<exclude>${jdk.folder}/bin/kinit.exe</exclude>
									<exclude>${jdk.folder}/bin/klist.exe</exclude>
									<exclude>${jdk.folder}/bin/ktab.exe</exclude>
									<exclude>${jdk.folder}/bin/javaws.exe</exclude>
									<exclude>${jdk.folder}/bin/pack200.exe</exclude>
									<exclude>${jdk.folder}/bin/unpack200.exe</exclude>
									<exclude>${jdk.folder}/bin/jrunscript.exe</exclude>
									<exclude>${jdk.folder}/bin/jaotc.exe</exclude>
									<exclude>${jdk.folder}/bin/jfr.exe</exclude>
									<exclude>${jdk.folder}/bin/jabswitch.exe</exclude>
									<exclude>${jdk.folder}/bin/jaccessinspector.exe</exclude>
									<exclude>${jdk.folder}/bin/jaccesswalker.exe</exclude>
									
									<exclude>${jdk.folder}/bin/appletviewer.exe</exclude>
									<exclude>${jdk.folder}/bin/clhsdb.exe</exclude>
									<exclude>${jdk.folder}/bin/extcheck.exe</exclude>
									<exclude>${jdk.folder}/bin/hsdb.exe</exclude>
									<exclude>${jdk.folder}/bin/idlj.exe</exclude>
									<exclude>${jdk.folder}/bin/jabswitch.exe</exclude>
									<exclude>${jdk.folder}/bin/jar.exe</exclude>
									<exclude>${jdk.folder}/bin/jarsigner.exe</exclude>
									<exclude>${jdk.folder}/bin/java-rmi.exe</exclude>
									<exclude>${jdk.folder}/bin/javac.exe</exclude>
									<exclude>${jdk.folder}/bin/javadoc.exe</exclude>
									<exclude>${jdk.folder}/bin/javah.exe</exclude>
									<exclude>${jdk.folder}/bin/javap.exe</exclude>
									<exclude>${jdk.folder}/bin/javaw.exe</exclude>
									<exclude>${jdk.folder}/bin/jcmd.exe</exclude>
									<exclude>${jdk.folder}/bin/jconsole.exe</exclude>
									<exclude>${jdk.folder}/bin/jdb.exe</exclude>
									<exclude>${jdk.folder}/bin/jdeps.exe</exclude>
									<exclude>${jdk.folder}/bin/jfr.exe</exclude>
									<exclude>${jdk.folder}/bin/jhat.exe</exclude>
									<exclude>${jdk.folder}/bin/jinfo.exe</exclude>
									<exclude>${jdk.folder}/bin/jjs.exe</exclude>
									<exclude>${jdk.folder}/bin/jmap.exe</exclude>
									<exclude>${jdk.folder}/bin/jps.exe</exclude>
									<exclude>${jdk.folder}/bin/jrunscript.exe</exclude>
									<exclude>${jdk.folder}/bin/jsadebugd.exe</exclude>
									<exclude>${jdk.folder}/bin/jstack.exe</exclude>
									<exclude>${jdk.folder}/bin/jstat.exe</exclude>
									<exclude>${jdk.folder}/bin/jstatd.exe</exclude>
									<exclude>${jdk.folder}/bin/keytool.exe</exclude>
									<exclude>${jdk.folder}/bin/kinit.exe</exclude>
									<exclude>${jdk.folder}/bin/klist.exe</exclude>
									<exclude>${jdk.folder}/bin/ktab.exe</exclude>
									<exclude>${jdk.folder}/bin/native2ascii.exe</exclude>
									<exclude>${jdk.folder}/bin/orbd.exe</exclude>
									<exclude>${jdk.folder}/bin/pack200.exe</exclude>
									<exclude>${jdk.folder}/bin/policytool.exe</exclude>
									<exclude>${jdk.folder}/bin/rmic.exe</exclude>
									<exclude>${jdk.folder}/bin/rmid.exe</exclude>
									<exclude>${jdk.folder}/bin/rmiregistry.exe</exclude>
									<exclude>${jdk.folder}/bin/schemagen.exe</exclude>
									<exclude>${jdk.folder}/bin/serialver.exe</exclude>
									<exclude>${jdk.folder}/bin/servertool.exe</exclude>
									<exclude>${jdk.folder}/bin/tnameserv.exe</exclude>
									<exclude>${jdk.folder}/bin/unpack200.exe</exclude>
									<exclude>${jdk.folder}/bin/wsgen.exe</exclude>
									<exclude>${jdk.folder}/bin/wsimport.exe</exclude>
									<exclude>${jdk.folder}/bin/xjc.exe</exclude>

									<!-- lib/ext -->
									<exclude>${jdk.folder}/lib/src.zip</exclude>
									<exclude>${jdk.folder}/lib/ext/cldrdata.jar</exclude>
									<exclude>${jdk.folder}/lib/ext/jaccess.jar</exclude>
									<exclude>${jdk.folder}/lib/ext/nashorn.jar</exclude>
									<exclude>${jdk.folder}/lib/ext/zipfs.jar</exclude>
								</excludes>
							</fileSet>
							<!-- filter p2.inf w/ correct version info -->
							<fileSet>
								<directory>${project.build.directory}/templates/</directory>
								<includes>
									<include>**/*</include>
								</includes>
							</fileSet>
						</additionalFileSets>
					</configuration>
				</plugin>


				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.5.0,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											flatten-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.0,)
										</versionRange>
										<goals>
											<goal>flatten</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.eclipse.tycho
										</groupId>
										<artifactId>
											target-platform-configuration
										</artifactId>
										<versionRange>
											[2.6.0,)
										</versionRange>
										<goals>
											<goal>target-platform</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-compiler-plugin</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<useProjectSettings>true</useProjectSettings>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-surefire-plugin</artifactId>
					<version>${tycho-version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>target-platform-configuration</artifactId>
					<version>${tycho-version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-p2-repository-plugin</artifactId>
					<version>${tycho-version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-versions-plugin</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<updateVersionRangeMatchingBounds>true</updateVersionRangeMatchingBounds>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

    
    <profiles>
        <profile>
            <id>modules</id>
            <activation>
                <property>
                    <name>skipModules</name>
                    <value>!true</value>
                </property>
            </activation>
            <modules>
                <module>hu.blackbelt.judo.eclipse.jdk.zulu.linux.aarch64</module>
                <module>hu.blackbelt.judo.eclipse.jdk.zulu.macosx.aarch64</module>
                <module>hu.blackbelt.judo.eclipse.jdk.zulu.linux.x86_64</module>
                <module>hu.blackbelt.judo.eclipse.jdk.zulu.macosx.x86_64</module>
                <module>hu.blackbelt.judo.eclipse.jdk.zulu.win32.x86_64</module>
                <module>feature</module>
                <module>updatesite</module>
                <module>test.rcp</module>
                <module>test.feature</module>
                <module>test.product</module>
<!--                <module>test</module> -->
            </modules>
        </profile>

		<profile>
			<id>sign-artifacts</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.simplify4u.plugins</groupId>
						<artifactId>sign-maven-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release-dummy</id>
			<distributionManagement>
				<snapshotRepository>
					<id>dummy-distribution</id>
					<url>file:///tmp/${project.groupId}-${project.artifactId}-${project.version}/maven-snapshot/</url>
				</snapshotRepository>
				<repository>
					<id>dummy-distribution</id>
					<url>file:///tmp/${project.groupId}-${project.artifactId}-${project.version}/maven-release/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>release-judong</id>
			<distributionManagement>
				<snapshotRepository>
					<id>judong-nexus-distribution</id>
					<!--suppress UnresolvedMavenProperty -->
					<url>https://nexus.judo.technology/repository/maven-judong-snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>judong-nexus-distribution</id>
					<!--suppress UnresolvedMavenProperty -->
					<url>https://nexus.judo.technology/repository/maven-judong-snapshots/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>release-central</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
							<stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<snapshotRepository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>release-p2-judong</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>upload-repository</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<serverId>judong-nexus-distribution</serverId>
									<fromDir>${basedir}/site/target/repository</fromDir>
									<includes>*/**</includes>
									<url>dav:https://nexus.judo.technology/repository/p2-judong/</url>
									<toDir>${project-shortname}/${project.version}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>generate-github-asciidoc-diagrams</id>

			<properties>
				<asciidoctor.maven.plugin.version>2.2.2</asciidoctor.maven.plugin.version>
				<asciidoctorj.version>2.5.7</asciidoctorj.version>
				<asciidoctorj.diagram.version>2.2.3</asciidoctorj.diagram.version>
				<jruby.version>9.3.4.0</jruby.version>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<!-- Comment this section to use the default jruby artifact provided by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram</artifactId>
								<version>${asciidoctorj.diagram.version}</version>
							</dependency>
							<!-- Since asciidoctorj-diagram v2.2.0, uncomment to use specific version of plantuml or ditaa -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram-plantuml</artifactId>
								<version>1.2022.5</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram-ditaamini</artifactId>
								<version>1.0.3</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceDirectory>./.github</sourceDirectory>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
							<attributes>
								<!-- Example below shows how to specify in this pom instead of System's PATH, the location of dot command of Graphviz, required by PlantUML libraries -->
								<!-- Windows:
                                    <graphvizdot>C:\Program Files (x86)\Graphviz2.38\bin\dot.exe</graphvizdot>
                                -->
								<!-- *nix :
                                    <graphvizdot>/usr/local/bin/dot</graphvizdot>
                                -->
							</attributes>
						</configuration>
						<executions>
							<execution>
								<id>generate-html-doc</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<attributes>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix/>
										<idseparator>-</idseparator>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.3.0</version>
						<executions>
							<execution>
								<id>copy-generated-gitflow-diagrams</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>

								<configuration>
									<outputDirectory>${basedir}/.github</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/target/generated-docs/images/</directory>
											<includes>
												<include>*.png</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>update-source-code-license</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>2.0.0</version>
						<configuration>
							<verbose>true</verbose>
							<addSvnKeyWords>false</addSvnKeyWords>
							<organizationName>BlackBelt Technology</organizationName>
							<inceptionYear>2018</inceptionYear>
						</configuration>
						<executions>
							<execution>
								<id>first</id>
								<goals>
									<goal>update-file-header</goal>
								</goals>
								<phase>process-sources</phase>
								<configuration>
									<licenseName>apache_v2</licenseName>
									<roots>
										<root>src/main/java</root>
										<root>src/test</root>
									</roots>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
    </profiles>

</project>
